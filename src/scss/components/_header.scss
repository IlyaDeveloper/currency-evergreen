.header {
  display: flex;
  gap: $gutterX2;
  place-items: center center;
  justify-content: space-between;

  padding: $gutterX2 var(--container-gutter);

  color: $light;

  background: $secondary;

  &__logo {
    font-size: rem(16);
    font-weight: 600;
    text-transform: uppercase;

    &:first-letter {
      font-size: rem(18);
      font-weight: 800;
      color: $primary;
    }
  }

  &__right, &__menu {
    display: inline-grid;
    grid-auto-flow: column dense;
    align-items: center;
    grid-gap: $gutterX3;
  }

  &__menu {
    position: fixed;
    inset: 0 0 0 0;
    z-index: 1;

    grid-auto-flow: row dense;
    grid-auto-rows: max-content;
    place-items: end;
    place-content: center stretch;
    grid-gap: calc(35vmin / 7);

    min-height: calc(100vh - 0.1px);

    padding: calc(#{$gutterX3}) calc(var(--layout-spacer) + #{rem(78)}) calc(#{$gutterX3}) var(--layout-spacer);

    color: $secondary-dark;

    text-transform: lowercase;
    font-size: rem(30);
    letter-spacing: rem(-1.8);
    font-weight: 800;
    text-align: right;

    transform: var(--header-menu-transform, translate(6%, 0) scale(1));
    opacity: var(--header-menu-opacity, 0);
    transition: .5s $transition-function;
    transition-property: transform, opacity;

    will-change: transform, opacity;

    overflow: hidden;

    &:after {
      position: absolute;
      inset: var(--layout-spacer) $gutterX3 var(--layout-spacer) auto;

      z-index: -1;
      max-width: rem(380);
      width: 70vw;

      content: '';

      border-radius: $radiusLargeHard;
      background: $light;
      opacity: 0.9;

      filter: blur(rem(100));
      will-change: filter, background;
    }

    &.--is-show {
      --header-menu-transform: none;
      --header-menu-opacity: 1;
      --header-menu-close-opacity: .46;
    }

    &-close {
      position: absolute;
      inset: 0;
      z-index: -2;

      width: inherit;

      background: $secondary-dark;
      box-shadow: 0 0 3vmax $secondary-dark;
      opacity: var(--header-menu-close-opacity, 0);

      transition: opacity .6s 0.1s $transition-function;
      will-change: box-shadow, opacity;
    }
  }

  &__link {
    position: relative;

    transition: color $transition-default;

    &:after {
      position: absolute;
      inset: auto 0 0 auto;

      width: rem(8);
      height: rem(8);

      content: '';

      border-radius: 50%;
      background: currentColor;
      box-shadow: 0 0 rem(13) rem(0) currentColor;

      transform: translate(200%, 100%) scale(var(--header-menu-link-after-scale, 0));
      transition: .6s linear;
      transition-property: transform;

    }

    &.--active {
      --header-menu-link-after-scale: 1.2;

      pointer-events: none;

      &:before {
        position: absolute;
        inset: 50% auto auto 50%;
        z-index: -1;

        width: 60%;
        height: 0;

        content: '';

        border-radius: inherit;
        background: transparent;
        box-shadow: rem(10) rem(10) rem(25) rem(8) $secondary-dark;
        opacity: 0.7;

        transform: translate(-50%, 50%) scale(1);
        transition: .83s $transition-function;
        transition-property: box-shadow, transform;
      }
    }

    @include only-mouse {
      &:hover {
        --header-menu-link-after-scale: 1.2;
      }
    }
  }

  &__btn-menu {
    display: inline-flex;
    flex-flow: column;
    place-content: center;
    place-items: flex-end center;

    color: $light;

    width: rem(32);
    height: rem(32);

    cursor: pointer;

    span {
      width: 80%;

      height: 2px;

      border-radius: rem(3);
      background: currentColor;

      transition: transform $transition-default;

      &:last-of-type {
        width: 100%;

        margin-top: rem(4);
        transition: margin 0.2s linear;
      }
    }

    &.--is-active {
      z-index: z-index(header) + $z-index-step;

      color: currentColor;

      transform: translateX(rem(5));

      span {
        width: 100%;
        transform: rotate(-45deg);
        transform-origin: center;

        &:last-of-type {
          transform: rotate(45deg);

          margin-top: rem(-3);
        }
      }

      &:after {
        position: absolute;
        inset: 50% auto auto 50%;
        z-index: -1;

        width: 100%;
        height: 0;

        content: '';

        border-radius: rem(38);
        background: transparent;
        box-shadow: rem(3) rem(3) rem(38) var(--btn-menuafter-shadow-size, rem(8)) $secondary-dark;
        opacity: 0.6;

        transform: translate(-50%, 50%);
        transition: $transition-default;
        transition-property: box-shadow;
      }
    }

    @include only-mouse {
      &:hover {
        --btn-menuafter-shadow-size: #{rem(15)};
        color: $primary;
      }
    }
  }

  @include max-wide(phones) {
    --button-gutter-x: #{rem(16)};
  }
}
